<Page x:Class="CrawExpenseReport.Screen.PageColorSetting"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:CrawExpenseReport.Screen"
      xmlns:data="clr-namespace:CrawExpenseReport.Data"
      xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:mdc="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      TextOptions.TextRenderingMode="Auto"
      Background="{DynamicResource MaterialDesignPaper}"
      mc:Ignorable="d" >
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Slider.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <data:ColorToBrushConverter x:Key="ColorToBrushConverter" />
            <data:BrushToHexConverter x:Key="BrushToHexConverter" />
            <data:MultiValueEqualityConverter x:Key="MultiValueEqualityConverter" />

            <Style TargetType="TextBlock" x:Key="HexLabelTextBlock" BasedOn="{StaticResource MaterialDesignBody2TextBlock}">
                <Setter Property="Margin" Value="8" />
            </Style>

            <Style TargetType="TextBlock" x:Key="LabelTextBox">
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="Margin" Value="0 0 0 4" />
            </Style>

            <DataTemplate DataType="{x:Type Color}" x:Key="SwatchColorTemplate">
                <Button Height="40" Width="40" Background="{Binding Converter={StaticResource ColorToBrushConverter}}" 
                        Command="{Binding DataContext.ChangeHueCommand, RelativeSource={RelativeSource AncestorType=local:PageColorSetting}}" 
                        CommandParameter="{Binding}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}">
                            <Setter Property="data:ButtonAssist.UniformCornerRadius" Value="0" />
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="Margin" Value="1 1 0 0" />
                            <Setter Property="md:RippleAssist.IsDisabled" Value="True" />
                            <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth0" />
                            <Setter Property="Tag" Value="0" />
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(data:ButtonAssist.UniformCornerRadius)" 
                                                                 To="8" Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(data:ButtonAssist.UniformCornerRadius)" 
                                                                 From="8" Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <DataTrigger Value="True">
                                    <DataTrigger.Binding>
                                        <MultiBinding Converter="{StaticResource MultiValueEqualityConverter}">
                                            <Binding RelativeSource="{RelativeSource AncestorType=local:PageColorSetting}" Path="DataContext.SelectedColor" Mode="OneWay" />
                                            <Binding Mode="OneWay"/>
                                        </MultiBinding>
                                    </DataTrigger.Binding>
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(data:ButtonAssist.UniformCornerRadius)" 
                                                                 To="20" Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <DataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(data:ButtonAssist.UniformCornerRadius)" 
                                                                 From="20" Duration="0:0:0.18" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.ExitActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </DataTemplate>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Center">
            <Grid>
                <Grid Visibility="{Binding IsChecked, ElementName=btnCustom, Converter={StaticResource BooleanToVisibilityConverter}}" Width="1000" Height="300">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160" />
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel>
                        <TextBox Text="{Binding Color, ElementName=ColorPicker, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource MaterialDesignFilledTextBox}" md:HintAssist.Hint="Color HEX value"
                                     DockPanel.Dock="Top" Margin="2,0,10,2"/>
                        <Rectangle Fill="{Binding Color, ElementName=ColorPicker, Converter={StaticResource ColorToBrushConverter}}" Margin="2,0,10,2" />
                    </DockPanel>
                    <md:ColorPicker Color="{Binding SelectedColor, Delay=25}" Grid.Column="1" x:Name="ColorPicker" />
                </Grid>

                <ScrollViewer Visibility="{Binding IsChecked, ElementName=btnMD, Converter={StaticResource BooleanToVisibilityConverter}}" Width="1000" Height="300">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <StackPanel.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontWeight" Value="Light" />
                                    <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                    <Setter Property="Width" Value="40" />
                                    <Setter Property="Margin" Value="1 1 0 0" />
                                    <Setter Property="TextAlignment" Value="Center" />
                                </Style>
                            </StackPanel.Resources>
                            <Rectangle Width="80" />
                            <TextBlock>50</TextBlock>
                            <TextBlock>100</TextBlock>
                            <TextBlock>200</TextBlock>
                            <TextBlock>300</TextBlock>
                            <TextBlock>400</TextBlock>
                            <TextBlock>500</TextBlock>
                            <TextBlock>600</TextBlock>
                            <TextBlock>700</TextBlock>
                            <TextBlock>800</TextBlock>
                            <TextBlock>900</TextBlock>
                            <TextBlock>A100</TextBlock>
                            <TextBlock>A200</TextBlock>
                            <TextBlock>A400</TextBlock>
                            <TextBlock>A700</TextBlock>
                        </StackPanel>
                        <ItemsControl ItemsSource="{Binding Swatches}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type mdc:ISwatch}">
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.Resources>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="FontWeight" Value="Light" />
                                                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
                                                <Setter Property="Width" Value="40" />
                                                <Setter Property="Margin" Value="1 1 0 0" />
                                                <Setter Property="TextAlignment" Value="Center" />
                                            </Style>
                                        </StackPanel.Resources>
                                        <TextBlock Text="{Binding Name}" Width="80" VerticalAlignment="Center" />
                                        <ItemsControl ItemsSource="{Binding Hues}" ItemTemplate="{StaticResource SwatchColorTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <VirtualizingStackPanel Orientation="Horizontal" />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </StackPanel>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </ScrollViewer>
            </Grid>
            <UniformGrid Columns="1" DockPanel.Dock="Right" Margin="10,0,0,0">
                <RadioButton x:Name="btnMD" Style="{StaticResource MaterialDesignTabRadioButton}" Margin="4" IsChecked="True" Content="MD Palette" />
                <RadioButton x:Name="btnCustom" Style="{StaticResource MaterialDesignTabRadioButton}" Margin="4" IsChecked="False" Content="Custom"/>
            </UniformGrid>
        </StackPanel>

        <Border Grid.Row="1" Margin="0,20,0,0">
            <Grid>
                <Grid.Resources>
                    <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedButton}" x:Key="PaletteButton">
                        <Setter Property="BorderBrush" Value="Transparent" />
                        <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth0" />
                        <Setter Property="md:ShadowAssist.ShadowEdges" Value="All" />
                        <Setter Property="md:RippleAssist.Feedback" Value="LightGray" />
                        <Setter Property="md:RippleAssist.RippleOnTop" Value="True" />
                        <Setter Property="Margin" Value="0" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                        <Setter Property="Height" Value="Auto" />
                        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                        <Setter Property="Padding" Value="16" />
                    </Style>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="300" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!-- Primary selection -->
                <Border>
                    <Button Command="{Binding ChangeToPrimaryCommand}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource PaletteButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                        <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth4" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2*" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Style="{StaticResource LabelTextBox}">Primary</TextBlock>
                            <!-- Primary mid section -->
                            <Border Background="{DynamicResource PrimaryHueMidBrush}" Grid.Row="1">
                                <Grid>
                                    <TextBlock DataContext="{DynamicResource PrimaryHueMidBrush}" 
                                                   Text="{Binding Converter={StaticResource BrushToHexConverter}}" 
                                                   Style="{StaticResource HexLabelTextBlock}" 
                                                   Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                    <Border Width="30" Height="30" CornerRadius="15">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                                        <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22"
                                                       Text="P">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Primary">
                                                            <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Border>
                                </Grid>
                            </Border>
                            <UniformGrid Rows="1" Grid.Row="2">
                                <!-- Primary light -->
                                <Border Background="{DynamicResource PrimaryHueLightBrush}">
                                    <TextBlock DataContext="{DynamicResource PrimaryHueLightBrush}" 
                                                   Text="{Binding Converter={StaticResource BrushToHexConverter}}" 
                                                   Style="{StaticResource HexLabelTextBlock}" 
                                                   Foreground="{DynamicResource PrimaryHueLightForegroundBrush}" />
                                </Border>
                                <!-- Primary dark -->
                                <Border Background="{DynamicResource PrimaryHueDarkBrush}">
                                    <TextBlock DataContext="{DynamicResource PrimaryHueDarkBrush}" 
                                                   Text="{Binding Converter={StaticResource BrushToHexConverter}}" 
                                                   Style="{StaticResource HexLabelTextBlock}" 
                                                   Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" />
                                </Border>
                            </UniformGrid>
                        </Grid>
                    </Button>
                </Border>
                <!-- Secondary selection -->
                <Border Grid.Column="1">
                    <Button Command="{Binding ChangeToSecondaryCommand}" >
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource PaletteButton}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                        <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth4" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="2*" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <TextBlock Style="{StaticResource LabelTextBox}">Secondary</TextBlock>
                            <!-- Secondary mid section -->
                            <Border Background="{DynamicResource SecondaryHueMidBrush}" Grid.Row="1">
                                <Grid>
                                    <TextBlock DataContext="{DynamicResource SecondaryHueMidBrush}" 
                                                   Text="{Binding Converter={StaticResource BrushToHexConverter}}" 
                                                   Style="{StaticResource HexLabelTextBlock}" 
                                                   Foreground="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                    <Border Width="30" Height="30" CornerRadius="15">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                                        <Setter Property="Background" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22"
                                                       Text="S">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="Secondary">
                                                            <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </Border>
                                </Grid>
                            </Border>
                            <UniformGrid Rows="1" Grid.Row="2">
                                <!-- Secondary light -->
                                <Border Background="{DynamicResource SecondaryHueLightBrush}">
                                    <TextBlock DataContext="{DynamicResource SecondaryHueLightBrush}" 
                                                   Text="{Binding Converter={StaticResource BrushToHexConverter}}" 
                                                   Style="{StaticResource HexLabelTextBlock}" 
                                                   Foreground="{DynamicResource SecondaryHueLightForegroundBrush}" />
                                </Border>
                                <!-- Secondary dark -->
                                <Border Background="{DynamicResource SecondaryHueDarkBrush}">
                                    <TextBlock DataContext="{DynamicResource SecondaryHueDarkBrush}" 
                                                   Text="{Binding Converter={StaticResource BrushToHexConverter}}" 
                                                   Style="{StaticResource HexLabelTextBlock}" 
                                                   Foreground="{DynamicResource SecondaryHueDarkForegroundBrush}" />
                                </Border>
                            </UniformGrid>
                        </Grid>
                    </Button>
                </Border>
                <UniformGrid Grid.Column="2" Columns="1">
                    <!-- Primary foreground selection -->
                    <Border>
                        <Button Command="{Binding ChangeToPrimaryForegroundCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource PaletteButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                            <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth4" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <TextBlock Style="{StaticResource LabelTextBox}">Text on P</TextBlock>
                                <Border Background="{DynamicResource PrimaryHueMidBrush}" Grid.Row="1">
                                    <Grid>
                                        <TextBlock DataContext="{DynamicResource PrimaryHueMidForegroundBrush}" 
                                                       Text="{Binding Converter={StaticResource BrushToHexConverter}}" 
                                                       Style="{StaticResource HexLabelTextBlock}" 
                                                       Foreground="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                        <Border Width="30" Height="30" CornerRadius="15">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22"
                                                           Text="T">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidForegroundBrush}" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="PrimaryForeground">
                                                                <Setter Property="Foreground" Value="{DynamicResource PrimaryHueMidBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Button>
                    </Border>
                    <!-- Secondary foreground selection -->
                    <Border>
                        <Button Command="{Binding ChangeToSecondaryForegroundCommand}">
                            <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource PaletteButton}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                            <Setter Property="md:ShadowAssist.ShadowDepth" Value="Depth4" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <TextBlock Style="{StaticResource LabelTextBox}">Text on S</TextBlock>
                                <Border Background="{DynamicResource SecondaryHueMidBrush}" Grid.Row="1">
                                    <Grid>
                                        <TextBlock DataContext="{DynamicResource SecondaryHueMidForegroundBrush}" 
                                                       Text="{Binding Converter={StaticResource BrushToHexConverter}}" 
                                                       Style="{StaticResource HexLabelTextBlock}" 
                                                       Foreground="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                        <Border Width="30" Height="30" CornerRadius="15">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                            <Setter Property="Background" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="22"
                                                           Text="T">
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidForegroundBrush}" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ActiveScheme}" Value="SecondaryForeground">
                                                                <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Button>
                    </Border>
                </UniformGrid>
            </Grid>
        </Border>
    </Grid>
</Page>
